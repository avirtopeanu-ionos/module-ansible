- hosts: localhost
  connection: local
  gather_facts: false

  vars_files:
    - vars.yml

  tasks:

  - name: Create datacenter
    datacenter:
        name: "{{ datacenter }}"
        location: de/fra
    register: datacenter_response

  - name: Provision a server
    server:
      datacenter: "{{ datacenter }}"
      name: "{{ name }} %02d"
      auto_increment: true
      cores: 2
      ram: 4096
      availability_zone: ZONE_1
      volume_availability_zone: ZONE_3
      volume_size: 20
      cpu_family: INTEL_SKYLAKE
      disk_type: HDD
      image: b40a2ea5-6aba-11ec-a917-62772f9c5dc0
      image_password: "{{ password }}"
      location: de/fra
      count: 1
      assign_public_ip: true
      remove_boot_volume: true
      wait: true
      wait_timeout: "{{ wait_timeout }}"
      state: present
    register: server_response

  - name: Create LAN 1
    lan:
      datacenter: "{{ datacenter }}"
      name: "test_lan1"
      public: false
    register: lan_response1

  - name: Create LAN 2
    lan:
      datacenter: "{{ datacenter }}"
      name: "test_lan2"
      public: true
    register: lan_response2

  - name: Create NIC 1
    nic:
      name: "test_nic1"
      datacenter: "{{ datacenter }}"
      server: "TestAnsible 01"
      lan: "{{ lan_response1.lan.id }}"
      wait: true
      wait_timeout: "{{ wait_timeout }}"
      state: present
    register: nic_response1

  - name: Create NIC 2
    nic:
      name: "test_nic2"
      datacenter: "{{ datacenter }}"
      server: "TestAnsible 01"
      lan: "{{ lan_response2.lan.id }}"
      wait: true
      wait_timeout: "{{ wait_timeout }}"
      state: present
    register: nic_response2

  - name: Create Cluster
    postgres_cluster:
      postgres_version: 12
      instances: 1
      cores: 1
      ram: 2048
      storage_size: 20480
      storage_type: HDD
      location: de/fra
      connections:
        - cidr: 192.168.1.106/24
          datacenterId: "{{ datacenter_response.datacenter.id }}"
          lanId: "{{ lan_response1.lan.id }}"
      display_name: backuptest-04
      synchronization_mode: ASYNCHRONOUS
      db_username: test
      db_password: 7357cluster
      wait: true
    register: cluster_response

  - name: Update Cluster
    postgres_cluster:
      postgres_cluster_id: "{{ cluster_response.postgres_cluster.id }}"
      postgres_version: 12
      instances: 2
      cores: 2
      ram: 4096
      storage_size: 30480
      state: update
      wait: true
    register: updated_cluster_response


  - name: Delete Cluster
    postgres_cluster:
      postgres_cluster_id: "{{ cluster_response.postgres_cluster.id }}"
      state: absent
      wait: true

  # - name: Remove datacenter
  #   datacenter:
  #     id: "{{ datacenter_response.datacenter.id }}"
  #     name: "{{ datacenter }}"
  #     state: absent
  #     wait: true
  #   register: deleted_datacenter
